{"ast":null,"code":"import{projectAuth,projectFirestore}from'./config';export var authMethods={// firebase helper methods\nsignup:function signup(name,email,password){var data={};projectAuth.createUserWithEmailAndPassword(email,password).then(function(cred){data.email=\"\".concat(cred.user.email);cred.user.updateProfile({displayName:name});}).then(function(){projectFirestore.collection(\"users\").doc(projectAuth.currentUser.uid).set({name:name,email:email});return;}).catch(function(error){data.message=\"\".concat(error.message);});},signin:function signin(email,password){var data={};projectAuth.signInWithEmailAndPassword(email,password).then(function(usercred){data.email=\"\".concat(usercred.user.email);}).catch(function(error){data.message=\"\".concat(error.message);});console.log(data);return data;},signout:function signout(){projectAuth.signOut().then(function(){}).catch(function(){});},updateUser:function updateUser(){}};","map":{"version":3,"sources":["D:/Mihai/pet-food/src/firebase/AuthMethods.js"],"names":["projectAuth","projectFirestore","authMethods","signup","name","email","password","data","createUserWithEmailAndPassword","then","cred","user","updateProfile","displayName","collection","doc","currentUser","uid","set","catch","error","message","signin","signInWithEmailAndPassword","usercred","console","log","signout","signOut","updateUser"],"mappings":"AAAA,OAAQA,WAAR,CAAoBC,gBAApB,KAA2C,UAA3C,CACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,CAC3B;AAGAC,MAAM,CAAC,gBAACC,IAAD,CAAOC,KAAP,CAAcC,QAAd,CAA0B,CAC/B,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACAP,WAAW,CAACQ,8BAAZ,CAA2CH,KAA3C,CAAiDC,QAAjD,EACCG,IADD,CACM,SAAAC,IAAI,CAAG,CACXH,IAAI,CAACF,KAAL,WAAgBK,IAAI,CAACC,IAAL,CAAUN,KAA1B,EACAK,IAAI,CAACC,IAAL,CAAUC,aAAV,CAAwB,CAACC,WAAW,CAACT,IAAb,CAAxB,EACD,CAJD,EAIGK,IAJH,CAIQ,UAAI,CACVR,gBAAgB,CAACa,UAAjB,CAA4B,OAA5B,EACCC,GADD,CACKf,WAAW,CAACgB,WAAZ,CAAwBC,GAD7B,EAECC,GAFD,CAEK,CAACd,IAAI,CAAJA,IAAD,CAAMC,KAAK,CAALA,KAAN,CAFL,EAGC,OACF,CATD,EAUCc,KAVD,CAUO,SAAAC,KAAK,CAAI,CACdb,IAAI,CAACc,OAAL,WAAkBD,KAAK,CAACC,OAAxB,EACD,CAZD,EAaD,CAnB0B,CAoB3BC,MAAM,CAAC,gBAACjB,KAAD,CAAQC,QAAR,CAAoB,CACzB,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACAP,WAAW,CAACuB,0BAAZ,CAAuClB,KAAvC,CAA6CC,QAA7C,EACCG,IADD,CACO,SAAAe,QAAQ,CAAI,CAChBjB,IAAI,CAACF,KAAL,WAAgBmB,QAAQ,CAACb,IAAT,CAAcN,KAA9B,EACF,CAHD,EAIDc,KAJC,CAIK,SAAAC,KAAK,CAAI,CACZb,IAAI,CAACc,OAAL,WAAkBD,KAAK,CAACC,OAAxB,EAEH,CAPC,EAQFI,OAAO,CAACC,GAAR,CAAYnB,IAAZ,EACA,MAAOA,CAAAA,IAAP,CACC,CAhC0B,CAiC3BoB,OAAO,CAAC,kBAAK,CACX3B,WAAW,CAAC4B,OAAZ,GAAsBnB,IAAtB,CAA2B,UAAI,CAE9B,CAFD,EAEGU,KAFH,CAES,UAAI,CAEZ,CAJD,EAKD,CAvC0B,CAwC3BU,UAAU,CAAC,qBAAI,CAGd,CA3C0B,CAApB","sourcesContent":["import {projectAuth,projectFirestore} from './config';\r\nexport const authMethods = {\r\n// firebase helper methods\r\n\r\n\r\nsignup:(name, email, password) =>{\r\n  let data = {}\r\n  projectAuth.createUserWithEmailAndPassword(email,password)\r\n  .then(cred =>{\r\n    data.email = `${cred.user.email}`\r\n    cred.user.updateProfile({displayName:name})\r\n  }).then(()=>{\r\n    projectFirestore.collection(\"users\")\r\n    .doc(projectAuth.currentUser.uid)\r\n    .set({name,email})\r\n     return \r\n  })\r\n  .catch(error => {\r\n    data.message = `${error.message}`\r\n  })\r\n},\r\nsignin:(email, password) =>{\r\n  let data = {}\r\n  projectAuth.signInWithEmailAndPassword(email,password)\r\n  .then( usercred => {\r\n     data.email = `${usercred.user.email}`\r\n  })\r\n.catch(error => {\r\n    data.message = `${error.message}`\r\n    \r\n})\r\nconsole.log(data)\r\nreturn data\r\n},\r\nsignout:() =>{\r\n  projectAuth.signOut().then(()=>{\r\n\r\n  }).catch(()=>{\r\n    \r\n  })\r\n},\r\nupdateUser:()=>{\r\n  \r\n\r\n}\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}