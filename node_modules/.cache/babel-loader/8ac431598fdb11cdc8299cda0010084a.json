{"ast":null,"code":"import { projectAuth } from './config';\nexport const authMethods = {\n  // firebase helper methods\n  signup: (name, email, password) => {\n    let currentUser;\n    projectAuth.createUserWithEmailAndPassword(email, password).then(cred => {\n      currentUser = cred;\n      currentUser.updateProfile({\n        displayNAme\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  signin: (email, password) => {\n    projectAuth.signInWithEmailAndPassword(email, password).then(usercred => {\n      const user = usercred.user;\n      console.log(user);\n    }).catch(error => {});\n  },\n  signout: () => {\n    projectAuth.signOut().then(() => {}).catch(() => {});\n  }\n};","map":{"version":3,"sources":["D:/Mihai/pet-food/src/firebase/AuthMethods.js"],"names":["projectAuth","authMethods","signup","name","email","password","currentUser","createUserWithEmailAndPassword","then","cred","updateProfile","displayNAme","catch","error","console","log","signin","signInWithEmailAndPassword","usercred","user","signout","signOut"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,UAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG;AAC3B;AAEAC,EAAAA,MAAM,EAAC,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA0B;AAC/B,QAAIC,WAAJ;AACAN,IAAAA,WAAW,CAACO,8BAAZ,CAA2CH,KAA3C,EAAiDC,QAAjD,EACCG,IADD,CACMC,IAAI,IAAG;AACXH,MAAAA,WAAW,GAAGG,IAAd;AACAH,MAAAA,WAAW,CAACI,aAAZ,CAA0B;AAACC,QAAAA;AAAD,OAA1B;AACD,KAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPD;AASD,GAd0B;AAe3BG,EAAAA,MAAM,EAAC,CAACZ,KAAD,EAAQC,QAAR,KAAoB;AACzBL,IAAAA,WAAW,CAACiB,0BAAZ,CAAuCb,KAAvC,EAA6CC,QAA7C,EACCG,IADD,CACOU,QAAQ,IAAI;AACjB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,KAJD,EAKDP,KALC,CAKKC,KAAK,IAAI,CACf,CANC;AAOD,GAvB0B;AAwB3BO,EAAAA,OAAO,EAAC,MAAK;AACXpB,IAAAA,WAAW,CAACqB,OAAZ,GAAsBb,IAAtB,CAA2B,MAAI,CAE9B,CAFD,EAEGI,KAFH,CAES,MAAI,CAEZ,CAJD;AAKD;AA9B0B,CAApB","sourcesContent":["import {projectAuth} from './config';\r\n\r\nexport const authMethods = {\r\n// firebase helper methods\r\n\r\nsignup:(name, email, password) =>{\r\n  let currentUser\r\n  projectAuth.createUserWithEmailAndPassword(email,password)\r\n  .then(cred =>{\r\n    currentUser = cred\r\n    currentUser.updateProfile({displayNAme})\r\n  })\r\n  .catch(error => {\r\n    console.log(error)\r\n  })\r\n \r\n},\r\nsignin:(email, password) =>{\r\n  projectAuth.signInWithEmailAndPassword(email,password)\r\n  .then( usercred => {\r\n    const user = usercred.user\r\n    console.log(user)\r\n  })\r\n.catch(error => {\r\n})\r\n},\r\nsignout:() =>{\r\n  projectAuth.signOut().then(()=>{\r\n\r\n  }).catch(()=>{\r\n    \r\n  })\r\n}\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}